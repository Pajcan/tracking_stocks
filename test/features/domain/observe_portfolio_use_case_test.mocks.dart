// Mocks generated by Mockito 5.4.4 from annotations
// in tracking_stocks/test/features/domain/observe_portfolio_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tracking_stocks/features/portfolio/domain/model/balance.dart'
    as _i3;
import 'package:tracking_stocks/features/portfolio/domain/model/portfolio.dart'
    as _i2;
import 'package:tracking_stocks/features/portfolio/domain/model/position.dart'
    as _i6;
import 'package:tracking_stocks/features/portfolio/domain/portfolio_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePortfolio_0 extends _i1.SmartFake implements _i2.Portfolio {
  _FakePortfolio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBalance_1 extends _i1.SmartFake implements _i3.Balance {
  _FakeBalance_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PortfolioRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPortfolioRepository extends _i1.Mock
    implements _i4.PortfolioRepository {
  MockPortfolioRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.Portfolio> observePortfolioStream() => (super.noSuchMethod(
        Invocation.method(
          #observePortfolioStream,
          [],
        ),
        returnValue: _i5.Stream<_i2.Portfolio>.empty(),
      ) as _i5.Stream<_i2.Portfolio>);

  @override
  _i5.Future<_i2.Portfolio> getInitialPortfolio() => (super.noSuchMethod(
        Invocation.method(
          #getInitialPortfolio,
          [],
        ),
        returnValue: _i5.Future<_i2.Portfolio>.value(_FakePortfolio_0(
          this,
          Invocation.method(
            #getInitialPortfolio,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Portfolio>);
}

/// A class which mocks [Portfolio].
///
/// See the documentation for Mockito's code generation for more information.
class MockPortfolio extends _i1.Mock implements _i2.Portfolio {
  MockPortfolio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Balance get balance => (super.noSuchMethod(
        Invocation.getter(#balance),
        returnValue: _FakeBalance_1(
          this,
          Invocation.getter(#balance),
        ),
      ) as _i3.Balance);

  @override
  List<_i6.Position> get positions => (super.noSuchMethod(
        Invocation.getter(#positions),
        returnValue: <_i6.Position>[],
      ) as List<_i6.Position>);

  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);
}
